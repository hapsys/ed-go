<?xml version="1.0" encoding="UTF-8"?>
<include>
	<!--  -->
	<table name="eng_type">
		<column name="localized" type="String"/> 
		<select name="ByPrimaryKey" single_object="true">
			<column name="eng_type_id"/>
		</select>
		<select name="ByUniq" single_object="true">
			<column name="eng_type_uniq"/>
		</select>
		<select name="SortedList">
			<sort>eng_type_uniq</sort>
		</select>
		<update name="ByPrimaryKey">
			<column name="eng_type_id"/>
		</update>
		<delete name="ByPrimaryKey">
			<column name="eng_type_id"/>
		</delete>
	</table>
	<!--  -->
	<table name="eng_blueprint">
		<column name="localized" type="String"/> 
		<select name="ByPrimaryKey" single_object="true">
			<column name="eng_blueprint_id"/>
		</select>
		<select name="ByUniq" single_object="true">
			<column name="eng_blueprint_uniq"/>
		</select>
		<select name="OrderedByTypeId">
			<column name="eng_type_id"/>
			<sort>eng_blueprint_uniq</sort>
		</select>
		<select name="Ordered">
			<sort>eng_blueprint_uniq</sort>
		</select>
		<update name="ByPrimaryKey">
			<column name="eng_blueprint_id"/>
		</update>
		<delete name="ByPrimaryKey">
			<column name="eng_blueprint_id"/>
		</delete>
	</table>
	<!--  -->
	<table name="eng_grade">
		<select name="ByPrimaryKey" single_object="true">
			<column name="eng_grade_id"/>
		</select>
		<select name="AllGrades">
			<sort>eng_blueprint_id, grade</sort>
		</select>
		<update name="ByPrimaryKey">
			<column name="eng_grade_id"/>
		</update>
		<delete name="ByPrimaryKey">
			<column name="eng_grade_id"/>
		</delete>
		<query name="GradesByTypeUniq">
			<column name="TypeUniq" type="String"/>
			<sql>
				SELECT g.*, b.*, GROUP_CONCAT(DISTINCT e.engeneer_name ORDER BY e.engeneer_name SEPARATOR ', ') as engeneers, '' as localized
				FROM eng_blueprint b, eng_type t, eng_grade g
				LEFT JOIN eng_engeneers_grade eg ON eg.eng_grade_id = g.eng_grade_id 
				LEFT JOIN eng_engeneers e ON e.eng_engeneer_id = eg.eng_engeneer_id
				WHERE t.eng_type_uniq = ? 
				AND b.eng_type_id = t.eng_type_id
				AND g.eng_blueprint_id = b.eng_blueprint_id
				GROUP BY g.eng_grade_id
				ORDER BY b.eng_blueprint_uniq, g.grade
			</sql>
		</query>
	</table>
	<!--  -->
	<table name="eng_blueprint_materials">
		<query name="MaterialsByTypeUniq">
			<column name="TypeUniq" type="String"/>
			<sql>
				SELECT m.material_uniq
				FROM eng_blueprint b, eng_grade g, eng_type t, eng_blueprint_materials bm, materials m
				WHERE t.eng_type_uniq = ?
				AND b.eng_type_id = t.eng_type_id
				AND g.eng_blueprint_id = b.eng_blueprint_id
				AND bm.eng_grade_id = g.eng_grade_id
				AND m.material_id = bm.material_id 
				GROUP BY m.material_uniq
				ORDER BY m.material_uniq
			</sql>
		</query>
		<query name="MaterialsByBlueprintAndGrade">
			<column name="BlueprintUniq" type="String"/>
			<column name="Grade" type="String"/>
			<sql>
				SELECT m.material_uniq
				FROM eng_blueprint b, eng_grade g, eng_blueprint_materials bm, materials m
				WHERE eng_blueprint_uniq = ?
				AND g.eng_blueprint_id = b.eng_blueprint_id
				AND g.grade = ?
				AND bm.eng_grade_id = g.eng_grade_id
				AND m.material_id = bm.material_id 
				GROUP BY m.material_uniq
				ORDER BY m.material_uniq
			</sql>
		</query>
		<query name="MaterialUnsingInfo">
			<column name="Material" type="String"/>
			<sql>
				SELECT m.material_uniq, '' as material_loc, g.*, b.*, t.*, GROUP_CONCAT(e.engeneer_name ORDER BY e.engeneer_name SEPARATOR ', ') as engeneers
				FROM  materials m, eng_blueprint b, eng_grade g, eng_type t,eng_blueprint_materials bm
				LEFT JOIN eng_engeneers_grade eg ON eg.eng_grade_id = bm.eng_grade_id
				LEFT JOIN eng_engeneers e ON e.eng_engeneer_id = eg.eng_engeneer_id
				WHERE m.material_uniq = ?
				AND bm.material_id = m.material_id
				AND g.eng_grade_id = bm.eng_grade_id
				AND b.eng_blueprint_id = g.eng_blueprint_id
				AND t.eng_type_id = b.eng_type_id
				GROUP BY bm.eng_grade_id
			</sql>
		</query>
		<query name="MaterialsForBlueprints">
			<sql>
				SELECT bm.eng_grade_id, m.material_uniq
				FROM eng_blueprint_materials bm, materials m
				WHERE bm.material_id = m.material_id
				ORDER BY bm.eng_grade_id, m.material_uniq
			</sql>
		</query>
	</table>
	<!--  -->
	<table name="eng_engeneers_grade">
		<query name="EngeneersForBlueprints">
			<sql>
				SELECT eg.eng_grade_id, GROUP_CONCAT(e.engeneer_name ORDER BY e.engeneer_name SEPARATOR ', ') as engeneers
				FROM eng_engeneers_grade eg
				LEFT JOIN eng_engeneers e ON e.eng_engeneer_id = eg.eng_engeneer_id
				GROUP BY eg.eng_grade_id
				ORDER BY eg.eng_grade_id
			</sql>
		</query>
	</table>	
	<!--  -->
</include>