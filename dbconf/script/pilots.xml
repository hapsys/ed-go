<?xml version="1.0" encoding="UTF-8"?>
<include>
	<!--  -->
	<table name="pilots">
		<column name="ships" type="List&lt;DBPilotShipsBean&gt;">
	    	<annotation>@XMLFieldList</annotation>
		</column>
		<column name="current_ship" type="DBPilotShipsBean">
	    	<annotation>@XMLReflectionField</annotation>
		</column>
		<column name="childs" type="List&lt;? extends Object&gt;">
	    	<annotation>@XMLFieldList</annotation>
		</column>
		<column name="powers" type="DBPowerCortageBean">
	    	<annotation>@XMLReflectionField</annotation>
		</column>
		<column name="Location" type="DBLastLocationForPilotBean">
	    	<annotation>@XMLReflectionField</annotation>
		</column>
		<column name="last_info" type="DBFullLastInfoBean">
	    	<annotation>@XMLReflectionField</annotation>
		</column>
		<!-- 		
		<column name="Rank" type="DBRanksBean">
	    	<annotation>@XMLReflectionField</annotation>
		</column>
		<column name="Progress" type="DBProgressBean">
	    	<annotation>@XMLReflectionField</annotation>
		</column>
		<column name="last_info" type="DBLastPilotInfoBean">
	    	<annotation>@XMLReflectionField</annotation>
		</column>
		<column name="last_activity_time" type="DBLastActivityTimeBean">
	    	<annotation>@XMLReflectionField</annotation>
		</column>
		 -->
		<column name="addition_one" type="List&lt;? extends Object&gt;">
	    	<annotation>@XMLFieldList</annotation>
		</column>
		<column name="addition_two" type="List&lt;? extends Object&gt;">
	    	<annotation>@XMLFieldList</annotation>
		</column>
		<column name="addition_three" type="List&lt;? extends Object&gt;">
	    	<annotation>@XMLFieldList</annotation>
		</column>
		<column name="addition_four" type="List&lt;? extends Object&gt;">
	    	<annotation>@XMLFieldList</annotation>
		</column>
		<select name="ByPrimaryKey" single_object="true">
			<column name="pilot_id"/>
		</select>
		<select name="ByName" single_object="true">
			<column name="pilot_name"/>
		</select>
		<select name="ByUserId">
			<column name="user_id"/>
		</select>
		<select name="ByUserIdNoIgnored">
			<column name="user_id"/>
			<column name="is_ignored" condition="&lt;&gt;" value="1"/>
		</select>
		<select name="CurrentByUserId" single_object="true">
			<column name="user_id"/>
			<column name="is_current" condition="=" value="1"/>
		</select>
		<select name="ByUserIdAndName" single_object="true">
			<column name="user_id"/>
			<column name="pilot_name"/>
		</select>
		<select name="LinkedPilots">
			<column name="parent_pilot_id"/>
		</select>
		<update name="ByPrimaryKey">
			<column name="pilot_id"/>
		</update>
		<query name="NoCurrent">
			<column name="UserId" type="long"/>
			<sql>
				UPDATE pilots SET is_current = 0 WHERE user_id = ?
			</sql>
		</query>
		<query name="MenuPilotsByUserId" use="Pilots">
			<column name="UserId" type="long"/>
			<sql>
				SELECT p.*
				FROM pilots p
				WHERE p.user_id = ?
				AND p.is_ignored != 1
				AND ISNULL(p.parent_pilot_id)
				ORDER BY p.pilot_name
			</sql>
		</query>		
		<query name="PilotsLinkedInfo">
			<column name="UserId" type="long"/>
			<sql>
				SELECT p.*, COUNT(pl.pilot_id) as name_other
				FROM pilots p
				LEFT JOIN pilots pl ON LOWER(p.pilot_name) = LOWER(pl.pilot_name) AND p.pilot_id != pl.pilot_id AND (pl.is_ignored = 0 OR ISNULL(pl.parent_pilot_id))
				WHERE p.user_id = ?
				GROUP BY p.pilot_id
				ORDER BY p.is_ignored, p.pilot_name
			</sql>
		</query>
		<query name="CheckPilotName" single_object="true">
			<column name="PilotName" type="String"/>
			<sql>
				SELECT COUNT(p.pilot_id) as name_other
				FROM pilots p
				WHERE LOWER(p.pilot_name) = LOWER(?)
			</sql>
		</query>
		<query name="SearchPilots">
			<column name="UserId" type="Long"/>
			<column name="SearchString" type="String"/>
			<sql>
				SELECT p.*, GROUP_CONCAT(DISTINCT pp.pilot_name SEPARATOR ', ') as linked_pilots, r.*,
				GROUP_CONCAT(DISTINCT CONCAT(i.info_uniq, '|||', i.info_link, '|||', CAST(IF(ISNULL(ip.level), IF(ISNULL(ui.level), i.def_level, ui.level), ip.level) AS UNSIGNED INTEGER)) SEPARATOR '///') as levels,
				SUM(DISTINCT rs.relation) as source_relation, SUM(DISTINCT rt.relation) as target_relation
				FROM (info i, pilots pj)
				LEFT JOIN pilots p ON pj.parent_pilot_id = p.pilot_id OR ISNULL(pj.parent_pilot_id) AND p.pilot_id = pj.pilot_id
				LEFT JOIN pilots pp ON pp.parent_pilot_id = p.pilot_id
				LEFT JOIN ranks r ON p.pilot_id = r.pilot_id
				LEFT JOIN pilots_info ip ON ip.pilot_id = p.pilot_id AND ip.info_id = i.info_id
				LEFT JOIN users_info ui ON ui.user_id = p.user_id AND ui.info_id = i.info_id
				LEFT JOIN pilots jp ON jp.user_id = ?
				LEFT JOIN pilot_relations rs ON jp.pilot_id = rs.source_pilot_id AND (p.pilot_id = rs.target_pilot_id OR pp.pilot_id = rs.target_pilot_id)
				LEFT JOIN pilot_relations rt ON jp.pilot_id = rt.target_pilot_id AND (p.pilot_id = rt.source_pilot_id OR pp.pilot_id = rt.source_pilot_id)
				WHERE pj.is_ignored = 0
				AND pj.pilot_name LIKE ?
				GROUP BY p.pilot_id
				ORDER BY p.pilot_name
				<limit/>
			</sql>
		</query>
	</table>
	<!--  -->
	<table name="pilot_last_info">
		<select name="ByPrimaryKey" single_object="true">
			<column name="pilot_id"/>
		</select>
		<update name="ByPrimaryKey">
			<column name="pilot_id"/>
		</update>
		<query name="LastPilotInfo" single_object="true">
			<column name="PilotId" type="long"/>
			<sql>
				SELECT li.*, m.*, gm.game_mode
				FROM pilot_last_info li, pilot_game_modes m, game_modes gm
				WHERE li.pilot_id = ?
				AND m.pilot_id = li.pilot_id
				AND m.game_mode_id = gm.game_mode_id
				ORDER BY m.mode_start DESC
				LIMIT 1 
			</sql>
		</query>
		<query name="SupercruiseFlag">
			<column name="IsSupercruise" type="long"/>
			<column name="PilotId" type="long"/>
			<sql>
				UPDATE pilot_last_info li 
				SET li.is_supercruise = ?
				WHERE li.pilot_id = ? 
				LIMIT 1
			</sql>
		</query>
		<query name="FullLastInfo" single_object="true">
			<column name="PilotId" type="long"/>
			<sql>
				SELECT pr.*, 
				pp.combat as progress_combat, pp.trade as progress_trade, pp.explore as progress_explore, pp.empire as progress_empire, pp.federation as progress_federation, pp.cqc as progress_cqc,
				gm.*, gms.*, s.name as system_name, st.name as station_name, b.body_name,
				pli.*, 0 as quered_events , TIMESTAMPDIFF(SECOND, gm.mode_end, NOW()) as last_event, eh.event_name, '' as last_seen, '' as fly_mode 
				FROM events_history eh, pilots p
				LEFT JOIN pilot_game_modes gm ON gm.pilot_game_mode_id =
					(SELECT gm1.pilot_game_mode_id 
						FROM pilot_game_modes gm1 
						WHERE gm1.pilot_id = p.pilot_id
						AND NOT ISNULL(gm1.mode_end)
						ORDER BY gm1.pilot_game_mode_id DESC
						LIMIT 1
					)
				LEFT JOIN game_modes gms ON gms.game_mode_id = gm.game_mode_id
				LEFT JOIN ranks pr ON pr.pilot_id = p.pilot_id
				LEFT JOIN progress pp ON pp.pilot_id = p.pilot_id
				LEFT JOIN pilot_last_info pli ON pli.pilot_id = p.pilot_id
				LEFT JOIN systems s ON s.system_id = pli.system_id
				LEFT JOIN stations st ON st.station_id = pli.station_id
				LEFT JOIN bodies b ON b.body_id = pli.body_id
				WHERE p.pilot_id = ?
				AND  eh.pilot_id = p.pilot_id
				GROUP BY p.user_id
				LIMIT 1
			</sql>
		</query>
	</table>
	<!--  -->
	<table name="pilot_game_modes">
		<select name="ByPrimaryKey" single_object="true">
			<column name="pilot_game_mode_id"/>
		</select>
		<select name="LastByPilotId" single_object="true">
			<column name="pilot_id"/>
			<sort>mode_start DESC</sort>
		</select>
		<update name="ByPrimaryKey">
			<column name="pilot_game_mode_id"/>
		</update>
		<query name="Activity" intruder="org.c3s.db.injectors.EmptySqlInjector">
			<sql>
				SELECT DAY(m.mode_start) as event_date , ROUND(SUM(TIMESTAMPDIFF(MINUTE, m.mode_start, m.mode_end)) / 60) as times
				, ROUND(SUM(TIMESTAMPDIFF(MINUTE, mo.mode_start, mo.mode_end)) / 60) as times_open
				, ROUND(SUM(TIMESTAMPDIFF(MINUTE, mg.mode_start, mg.mode_end)) / 60) as times_group
				, ROUND(SUM(TIMESTAMPDIFF(MINUTE, ms.mode_start, ms.mode_end)) / 60) as times_solo
				FROM pilot_game_modes m
				LEFT JOIN pilot_game_modes mo ON mo.pilot_game_mode_id = m.pilot_game_mode_id AND mo.game_mode_id = 1
				LEFT JOIN pilot_game_modes mg ON mg.pilot_game_mode_id = m.pilot_game_mode_id AND mg.game_mode_id = 2
				LEFT JOIN pilot_game_modes ms ON ms.pilot_game_mode_id = m.pilot_game_mode_id AND ms.game_mode_id = 3
				WHERE NOT ISNULL(m.mode_end) 
				AND m.mode_start &lt; m.mode_end
				<where/>
				GROUP BY DAY(m.mode_start)
				ORDER BY event_date ASC
			</sql>
		</query>
	</table>
	<!--  -->
	<table name="pilot_ships">
		<column name="ship" type="DBShipsBean">
	    	<annotation>@XMLReflectionField</annotation>
		</column>
		<column name="modules" type="List&lt;? extends Object&gt;">
	    	<annotation>@XMLFieldList</annotation>
		</column>
		<column name="system_name" type="String">
	    	<annotation>@XMLSimple("systemName")</annotation>
		</column>
		<column name="station_name" type="String">
	    	<annotation>@XMLSimple("stationName")</annotation>
		</column>
		<select name="ByPrimaryKey" single_object="true">
			<column name="pilot_ship_id"/>
		</select>
		<update name="ByPrimaryKey">
			<column name="pilot_ship_id"/>
		</update>
		<delete name="ByPrimaryKey">
			<column name="pilot_ship_id"/>
		</delete>
		<select name="ByPilotId">
			<column name="pilot_id"/>
		</select>
		<select name="CurrentByPilotId" single_object="true">
			<column name="pilot_id"/>
			<column name="is_main" condition="=" value="1"/>
		</select>
		<select name="ByPilotIdAndLinkShipId" single_object="true">
			<column name="pilot_id"/>
			<column name="link_ship_id"/>
		</select>
		<query name="PilotShipsList">
			<column name="PilotId" type="long"/>
			<result_column name="distance" type="Double">
	    		<annotation>@XMLSimple</annotation>
			</result_column>
			<sql>
				SELECT ps.*, sh.*, s.name as system_name, st.name as station_name, s.x, s.y, s.z
				FROM ships sh, pilot_ships ps
				LEFT JOIN systems s ON ps.system_id = s.system_id
				LEFT JOIN stations st ON ps.station_id = st.station_id
				WHERE ps.pilot_id = ?
				AND ps.ship_id = sh.ship_id
				ORDER BY ps.is_main DESC, sh.ship_name
			</sql>
		</query>
		<query name="ByPilotIdAndLinkShipIdWithLocation" single_object="true" use="PilotShips">
			<column name="PilotId" type="long"/>
			<column name="LinkShiptId" type="long"/>
			<sql>
				SELECT ps.*, ss.name as system_name, st.name as station_name
				FROM pilot_ships ps
				LEFT JOIN systems ss ON ss.system_id = ps.system_id
				LEFT JOIN stations st ON st.station_id = ps.station_id
				WHERE ps.pilot_id = ?
				AND ps.link_ship_id = ?
				LIMIT 1 
			</sql>
		</query>
		<query name="SetDeletedByPilotId">
			<column name="PilotId" type="long"/>
			<sql>
				UPDATE pilot_ships SET can_deleted = 1 WHERE pilot_id = ? 
			</sql>
		</query>
		<query name="DeletedByPilotId">
			<column name="PilotId" type="long"/>
			<sql>
				DELETE ps
				FROM pilot_ships ps
				WHERE ps.pilot_id = ?
				AND ps.can_deleted = 1
			</sql>
			<!-- 
			<sql>
				DELETE mr, pm, ps
				FROM module_recipies mr, pilot_modules pm, pilot_ships ps
				WHERE ps.pilot_id = ?
				AND ps.can_deleted = 1
				AND pm.pilot_ship_id = ps.pilot_ship_id
				AND mr.pilot_module_id = pm.pilot_module_id
			</sql>
			 -->
		</query>
	</table>
	<!--  -->
	<table name="pilot_modules">
		<select name="ByPrimaryKey" single_object="true">
			<column name="pilot_module_id"/>
		</select>
		<select name="ByPilotShipIdSlotId" single_object="true">
			<column name="pilot_ship_id"/>
			<column name="slot_id"/>
		</select>
		<update name="ByPrimaryKey">
			<column name="pilot_module_id"/>
		</update>
		<delete name="ByPrimaryKey">
			<column name="pilot_module_id"/>
		</delete>
		<delete name="ByPilotShipId">
			<column name="pilot_ship_id"/>
		</delete>
		<delete name="ByPilotShipIdAndSlotId">
			<column name="pilot_ship_id"/>
			<column name="slot_id"/>
		</delete>
		<query name="PilotShipModulesList">
			<column name="PilotShipId" type="long"/>
			<result_column name="modifyers" type="List&lt;DBModifyersByPilotModuleIdBean&gt;">
	    		<annotation>@XMLFieldList</annotation>
			</result_column>
			<sql>
				SELECT ps.pilot_ship_id, sh.ship_name, sl.slot_uniq, cs.name as coriolis_name, cm.data-&gt;&gt;'$.id' as coriolis_id, st.slot_type_name, st.slot_type_id, m.*, mg.*, 
				CAST(IF(ISNULL(ss.link_size), sl.size, ss.link_size) AS CHAR(1)) as link_size,
				mr.recipie_level, mr.module_recipe_id, r.* 
				FROM (pilot_ships ps, ships sh, ship_slots ss, slots sl, slot_types st)
				LEFT JOIN  pilot_modules pm ON pm.pilot_ship_id = ps.pilot_ship_id AND pm.slot_id = sl.slot_id
				LEFT JOIN modules m ON m.module_id = pm.module_id
				LEFT JOIN module_groups mg ON mg.module_group_id = m.module_group_id
				LEFT JOIN module_recipies mr ON mr.pilot_module_id = pm.pilot_module_id
				LEFT JOIN recipies r ON r.recipie_id = mr.recipie_id
				LEFT JOIN coriolis_ships cs ON cs.eddb_id = sh.eddb_id
				LEFT JOIN coriolis_modules cm ON cm.eddb_id = m.eddb_id
				WHERE ps.pilot_ship_id = ?
				AND ps.ship_id = sh.ship_id 
				AND ss.ship_id = sh.ship_id
				AND sl.slot_id = ss.slot_id
				AND st.slot_type_id = sl.slot_type_id
				GROUP BY pm.pilot_ship_id, sl.slot_id
				ORDER BY st.slot_type_name, sl.slot_order ASC, sl.slot_uniq ASC
			</sql>
		</query>
		<query name="SetDeletedByPilotShipId">
			<column name="PilotShipId" type="long"/>
			<sql>
				UPDATE pilot_modules SET can_deleted = 1 WHERE pilot_module_id = ? 
			</sql>
		</query>
		<query name="FailModulesByPilotShipId">
			<column name="PilotShipId" type="long"/>
			<sql>
				DELETE FROM pilot_modules WHERE pilot_module_id = ? AND can_deleted = 1 
			</sql>
		</query>
		<query name="PilotModulesList">
			<column name="PilotId" type="long"/>
			<sql>
				SELECT IF(ISNULL(m.module_name), mg.module_group_name, m.module_name) as common_module_name, m.module_class, m.module_rating, m.module_weapon_mode, 
					COUNT(DISTINCT ps.link_ship_id) as ships_count, GROUP_CONCAT(DISTINCT CONCAT(s.ship_name, ':', ps.link_ship_id)  ORDER BY s.ship_name ASC) as ships
				FROM pilot_ships ps, pilot_modules pm, modules m, ships s, module_groups mg
				WHERE ps.pilot_id = ?
				AND pm.pilot_ship_id = ps.pilot_ship_id
				AND pm.module_id = m.module_id
				AND m.module_group_id != 50
				AND m.module_group_id = mg.module_group_id
				AND s.ship_id = ps.ship_id
				GROUP BY common_module_name, m.module_class, m.module_rating, m.module_weapon_mode
				ORDER BY common_module_name, m.module_class DESC, m.module_rating ASC				
			</sql>
		</query>		
	</table>
	<!--  -->
	<table name="recipies">
		<select name="ByPrimaryKey" single_object="true">
			<column name="recipie_id"/>
		</select>
		<select name="ByName" single_object="true">
			<column name="recipie_name"/>
		</select>
		<update name="ByPrimaryKey">
			<column name="recipie_id"/>
		</update>
		<delete name="ByPrimaryKey">
			<column name="recipie_id"/>
		</delete>
	</table>
	<!--  -->
	<table name="module_recipies">
		<select name="ByPrimaryKey" single_object="true">
			<column name="module_recipe_id"/>
		</select>
		<select name="ByPilotModuleIdAndRecipieId" single_object="true">
			<column name="pilot_module_id"/>
			<column name="recipie_id"/>
		</select>
		<update name="ByPrimaryKey">
			<column name="module_recipe_id"/>
		</update>
		<delete name="ByPrimaryKey">
			<column name="module_recipe_id"/>
		</delete>
		<delete name="ByPilotModuleId">
			<column name="pilot_module_id"/>
		</delete>
	</table>
	<!--  -->
	<table name="modifiers">
		<select name="ByPrimaryKey" single_object="true">
			<column name="modifier_id"/>
		</select>
		<select name="ByModifyerUniq" single_object="true">
			<column name="modifier_uniq"/>
		</select>
		<update name="ByPrimaryKey">
			<column name="modifier_id"/>
		</update>
	</table>
	<table name="module_modifiers">
		<select name="ByPrimaryKey" single_object="true">
			<column name="module_recipe_id"/>
			<column name="modifier_id"/>
		</select>
		<update name="ByPrimaryKey">
			<column name="module_recipe_id"/>
			<column name="modifier_id"/>
		</update>
		<delete name="ByPrimaryKey">
			<column name="module_recipe_id"/>
			<column name="modifier_id"/>
		</delete>
		<delete name="ByModuleRecipieId">
			<column name="module_recipe_id"/>
		</delete>
		<query name="ModifyersByPilotModuleId" intruder="org.c3s.db.injectors.EmptySqlInjector">
			<sql>
				SELECT mm.*, m.*
				FROM module_modifiers mm, modifiers m
				WHERE 1=1
				<where/>
				AND m.modifier_id = mm.modifier_id
				ORDER BY mm.module_recipe_id, m.modifier_uniq
			</sql>		
		</query>
	</table>
	<!--  -->
	
	<table name="pilot_materials">
		<select name="ByPrimaryKey" single_object="true">
			<column name="pilot_id"/>
			<column name="material_id"/>
		</select>
		<update name="ByPrimaryKey">
			<column name="pilot_id"/>
			<column name="material_id"/>
		</update>
		<delete name="ByPrimaryKey">
			<column name="pilot_id"/>
			<column name="material_id"/>
		</delete>
		<query name="PilotMaterialsList">
			<column name="PilotId" type="long"/>
			<sql>
				SELECT m.*, mc.*, IF(ISNULL(pm.quantity), 0, pm.quantity) as quantity,
				'' as localized, UNIX_TIMESTAMP() - IF(ISNULL(pm.update_time),0,UNIX_TIMESTAMP(pm.update_time)) as update_time, COUNT(DISTINCT bm.eng_grade_id) as used
				FROM material_category mc, materials m
				LEFT JOIN pilot_materials pm ON pm.pilot_id = ? AND pm.material_id = m.material_id
				LEFT JOIN eng_blueprint_materials bm ON bm.material_id = m.material_id 
				WHERE m.matherial_category_id = mc.material_category_id
				GROUP BY m.material_id   
			</sql>
		</query>
		<query name="MaterialsForDelete">
			<column name="PilotId" type="long"/>
			<sql>
				UPDATE pilot_materials SET can_delete = 1 WHERE pilot_id = ?
			</sql>
		</query>
		<query name="MaterialsCanDelete">
			<column name="PilotId" type="long"/>
			<sql>
				DELETE FROM pilot_materials WHERE pilot_id = ? AND can_delete = 1
			</sql>
		</query>
	</table>
	<!--  -->
	<table name="pilots_info">
		<select name="ByPrimaryKey" single_object="true">
			<column name="pilot_id"/>
			<column name="info_id"/>
		</select>
		<update name="ByPrimaryKey">
			<column name="pilot_id"/>
			<column name="info_id"/>
		</update>
		<query name="PilotInfoWithDefaults">
			<column name="PilotId" type="Long"/>
			<sql>
				SELECT i.*, CAST(IF(ISNULL(ip.level), IF(ISNULL(ui.level), i.def_level, ui.level), ip.level) AS UNSIGNED INTEGER) as level
				FROM (info i, pilots p)
				LEFT JOIN pilots_info ip ON ip.pilot_id = p.pilot_id AND ip.info_id = i.info_id
				LEFT JOIN users_info ui ON ui.user_id = p.user_id AND ui.info_id = i.info_id
				WHERE p.pilot_id = ?
				GROUP BY i.info_id
				ORDER BY i.sort 
			</sql>
		</query>
	</table>
	<!--  -->
</include>